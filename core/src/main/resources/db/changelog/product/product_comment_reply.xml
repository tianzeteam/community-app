<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">
    <changeSet id="createTableProductCommentReply" author="jason">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="product_comment_reply"></tableExists>
            </not>
        </preConditions>
        <comment>创建产品评价回复表</comment>
        <sql>
            CREATE TABLE product_comment_reply(
            ID BIGINT NOT NULL,
            COMMENT_ID BIGINT,
            PID BIGINT,
            USER_ID BIGINT,
            DETAILS VARCHAR(255),
            LIKE_COUNT INT,
            STAMP_COUNT INT,
            REVISION INT,
            CREATED_TIME TIMESTAMP,
            PRIMARY KEY (ID)
            );

            COMMENT ON TABLE product_comment_reply IS '产品评价回复';
            COMMENT ON COLUMN product_comment_reply.ID IS '主键ID';
            COMMENT ON COLUMN product_comment_reply.COMMENT_ID IS '顶级评价主键ID';
            COMMENT ON COLUMN product_comment_reply.PID IS '父级回复主键ID';
            COMMENT ON COLUMN product_comment_reply.USER_ID IS '用户主键ID';
            COMMENT ON COLUMN product_comment_reply.DETAILS IS '回复内容';
            COMMENT ON COLUMN product_comment_reply.LIKE_COUNT IS '赞数量';
            COMMENT ON COLUMN product_comment_reply.STAMP_COUNT IS '踩数量';
            COMMENT ON COLUMN product_comment_reply.REVISION IS '乐观锁';
            COMMENT ON COLUMN product_comment_reply.CREATED_TIME IS '创建时间';

            CREATE SEQUENCE product_comment_reply_id_seq
            START WITH 1
            INCREMENT BY 1
            NO MINVALUE
            NO MAXVALUE
            CACHE 1;

            alter table "product_comment_reply" alter column ID set default nextval('product_comment_reply_id_seq');

            create index idx_prdcom_comment_id on product_comment_reply using btree (COMMENT_ID);
            create index idx_prdcom_comment_pid on product_comment_reply using btree (PID);
            create index idx_prdrpl_user_id on product_comment_reply using btree (USER_ID);

        </sql>
    </changeSet>
    <changeSet id="addColumnFunCount4ProductCommentReply" author="jason">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="product_comment_reply" columnName="fun_count"></columnExists>
            </not>
        </preConditions>
        <comment>增加字段</comment>
        <sql>
            alter table product_comment_reply add column fun_count int;
            COMMENT ON COLUMN product_comment_reply.fun_count IS '有趣数量';
        </sql>
    </changeSet>
</databaseChangeLog>