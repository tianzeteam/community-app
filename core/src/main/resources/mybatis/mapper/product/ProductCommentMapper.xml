<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.home.modules.product.dao.ProductCommentMapper">
  <resultMap id="BaseResultMap" type="com.smart.home.modules.product.entity.ProductComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="star_count" jdbcType="INTEGER" property="starCount" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="fun_count" jdbcType="INTEGER" property="funCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="stamp_count" jdbcType="INTEGER" property="stampCount" />
    <result column="reply_count" jdbcType="INTEGER" property="replyCount" />
    <result column="created_time" jdbcType="DATE" property="createdTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, user_id, star_count, details, fun_count, like_count, stamp_count, 
    reply_count, created_time
  </sql>
  <select id="selectByExample" parameterType="com.smart.home.modules.product.entity.ProductCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.smart.home.modules.product.entity.ProductCommentExample">
    delete from product_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smart.home.modules.product.entity.ProductComment">
    insert into product_comment (id, product_id, user_id, 
      star_count, details, fun_count, 
      like_count, stamp_count, reply_count, 
      created_time)
    values (#{id,jdbcType=BIGINT}, #{productId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, 
      #{starCount,jdbcType=INTEGER}, #{details,jdbcType=VARCHAR}, #{funCount,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER}, #{stampCount,jdbcType=INTEGER}, #{replyCount,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.smart.home.modules.product.entity.ProductComment">
    insert into product_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="starCount != null">
        star_count,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="funCount != null">
        fun_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="stampCount != null">
        stamp_count,
      </if>
      <if test="replyCount != null">
        reply_count,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="starCount != null">
        #{starCount,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="funCount != null">
        #{funCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="stampCount != null">
        #{stampCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null">
        #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smart.home.modules.product.entity.ProductCommentExample" resultType="java.lang.Long">
    select count(*) from product_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.starCount != null">
        star_count = #{record.starCount,jdbcType=INTEGER},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.funCount != null">
        fun_count = #{record.funCount,jdbcType=INTEGER},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.stampCount != null">
        stamp_count = #{record.stampCount,jdbcType=INTEGER},
      </if>
      <if test="record.replyCount != null">
        reply_count = #{record.replyCount,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_comment
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      star_count = #{record.starCount,jdbcType=INTEGER},
      details = #{record.details,jdbcType=VARCHAR},
      fun_count = #{record.funCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      stamp_count = #{record.stampCount,jdbcType=INTEGER},
      reply_count = #{record.replyCount,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.home.modules.product.entity.ProductComment">
    update product_comment
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="starCount != null">
        star_count = #{starCount,jdbcType=INTEGER},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="funCount != null">
        fun_count = #{funCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="stampCount != null">
        stamp_count = #{stampCount,jdbcType=INTEGER},
      </if>
      <if test="replyCount != null">
        reply_count = #{replyCount,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.home.modules.product.entity.ProductComment">
    update product_comment
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      star_count = #{starCount,jdbcType=INTEGER},
      details = #{details,jdbcType=VARCHAR},
      fun_count = #{funCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      stamp_count = #{stampCount,jdbcType=INTEGER},
      reply_count = #{replyCount,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>